{"version":3,"sources":["components/Navbar.js","components/bills/BillTable.js","components/bills/BillForm.js","components/bills/LogPage.js","components/bills/BillLog.js","components/bills/Bill.js","components/others/TableTest.js","components/robogame/RoboGameMain.js","components/robogame/Robots.js","components/rest/getTest.js","components/forms/FormUserDetails.js","components/forms/FormPersonalDetails.js","components/forms/Confirm.js","components/forms/Success.js","components/forms/UserForm.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","navStyle","color","react_default","a","createElement","className","href","react_router_dom","style","to","id","this","props","account","width","height","src","concat","Identicon","toString","Component","Moment","globalFormat","useRowStyles","makeStyles","root","& > *","borderBottom","table","minWidth","MyRow","row","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","classes","_React$useState3","_React$useState4","dialogueOpen","setDialogueOpen","_React$useState5","_React$useState6","quantityDialogueOpen","setQuantityDialogueOpen","handleClose","handleClickOpenQuantity","handleCloseQuantity","inputValue","useRef","Fragment","TableRow","TableCell","IconButton","aria-label","size","onClick","KeyboardArrowUp_default","KeyboardArrowDown_default","component","scope","align","section","item","unit","quantity","unitPrice","history","ppi","baseppi","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","variant","gutterBottom","Table","TableHead","TableBody","map","historyRow","_React$createElement","_React$createElement2","key","timestamp","dist_default","unix","owner","Button","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","label","type","fullWidth","inputRef","input","DialogActions","defineProperty","event","console","log","value","setQuantity","setUnitPrice","BillTable","_this","TableContainer","Paper","bills","blockItem","workSection","itemDescription","theme","createMuiTheme","BillForm","formControl","spacing","fontSize","selectEmpty","marginTop","handleChange","e","setState","target","state","_this2","_this$state","values","ThemeProvider","Grid","container","justify","FormControl","InputLabel","Select","onChange","MenuItem","FormHelperText","helperText","defaultValue","labelId","preventDefault","tempppi","createBill","Date","ID","total","LogPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","billQuantity","billCount","logs","loading","loadWeb3","loadBlockchainData","window","ethereum","web3","Web3","enable","currentProvider","alert","logsLogs","eth","getAccounts","accounts","net","getId","networkId","networkData","Bills","networks","Contract","abi","address","getPastEvents","fromBlock","toBlock","then","events","toConsumableArray","BillLog","blockNumber","transactionHash","returnValues","pendingRequests","Bill","oracleContract","oracleAddress","bind","assertThisInitialized","setOracleInstanceAddress","processQueue","loadOracle","axios","url","params","symbol","method","resp","data","price","methods","billLog","billCreatedLog","i","bill","j","length","getBlock","result","logTimestamp","BillsOracle","send","from","on","hash","confirmationNumber","receipt","_this3","updateppiPrice","filterOracleEvents","filterCallerEvents","once","_this4","newUnitPrice","_this5","newQuantity","_this6","_this7","filter","_ref","asyncToGenerator","regenerator_default","mark","_callee6","err","wrap","_context8","prev","next","error","ppiValue","Math","pow","stop","_x","_x2","apply","arguments","_ref2","_callee7","_context9","_x3","_x4","_this8","_ref3","_callee8","_context10","abrupt","addRequestToQueue","_x5","_x6","_ref4","_callee9","_context11","_x7","_x8","callerAddress","push","ownerAddress","req","shift","processRequest","processedRequests","retries","MAX_RETRIES","retrieveLatestppi","setLatestppi","_context14","t0","replace","multiplier","BN","ppiInt","parseInt","mul","idInt","_context15","_this9","updateppi","bills_BillForm","bills_BillTable","bills_BillLog","createMyData","date","customerId","myRows","CollapsibleTable","TableTest_MyRow","RoboGameMain","role","maxWidth","onSubmit","name","robotName","createRobot","ref","placeholder","required","robots","robot","alt","utils","fromWei","level","robotID","toWei","levelRobot","Robots","roboGame","robotCount","RoboGame","posts","sort","b","robogame_RoboGameMain","getTest","_Component","_getPrototypeOf2","_len","args","Array","_key","product","ethData","localJson","inherits","createClass","_componentDidMount","_callee","_context","sent","Results","series","year","FormUserDetails","continue","nextStep","_this$props","AppBar","position","top","bottom","firstName","lastName","email","justifyContent","FormPersonalDetails","back","prevStep","occupation","city","bio","_this$props$values","List","ListItem","ListItemText","primary","secondary","Success","UserForm","step","forms_FormUserDetails","forms_FormPersonalDetails","Confirm","forms_Success","App","components_Navbar","react_router","path","TableTest","exact","GetTest","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8049f367.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Identicon from \"identicon.js\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  render() {\n    const navStyle = {\n      color: \"white\",\n    };\n\n    return (\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n        <a className=\"navbar-brand col-sm-3 col-md-2 mr-0\" href=\"/\">\n          Bill of Quantities\n        </a>\n        <ul className=\"nav-links\">\n          <Link style={navStyle} to=\"/TableTest\">\n            <li>Table test</li>\n          </Link>\n          <Link style={navStyle} to=\"/log\">\n            <li>Log</li>\n          </Link>\n          <Link style={navStyle} to=\"/bill\">\n            <li>Bill</li>\n          </Link>\n          {/* <Link style={navStyle} to=\"/gettest\">\n            <li>GET TEST</li>\n          </Link> */}\n          <Link style={navStyle} to=\"/robots\">\n            <li>Robots</li>\n          </Link>\n          {/* <Link style={navStyle} to=\"/userform\">\n            <li>User Form</li>\n          </Link> */}\n        </ul>\n\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small className=\"text-secondary\">\n              <small id=\"account\">{this.props.account}</small>\n            </small>\n            {this.props.account ? (\n              <img //check video for explanation for this\n                className=\"ml-2\"\n                width=\"30\"\n                height=\"30\"\n                src={`data:image/png;base64, ${new Identicon(\n                  this.props.account,\n                  30\n                ).toString()}`}\n              />\n            ) : (\n              <span></span>\n            )}\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { sizing } from \"@material-ui/system\";\n\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Moment from \"react-moment\";\n// momentDate.format(\"YYYY-MM-DDTHH:mm:ss\");\nMoment.globalFormat = \"D MMM YYYY, HH:mm:ss\";\n\nconst useRowStyles = makeStyles({\n  root: {\n    \"& > *\": {\n      borderBottom: \"unset\",\n    },\n    table: {\n      minWidth: 650,\n    },\n  },\n});\n\nfunction transformData(blockItem) {\n  return {\n    id: blockItem.id.toString(),\n    section: blockItem.workSection,\n    component: blockItem.component,\n    item: blockItem.itemDescription,\n    unit: blockItem.unit,\n    quantity: blockItem.quantity.toString(),\n    unitPrice: blockItem.unitPrice.toString(),\n    history: [\n      {\n        baseppi: blockItem.baseppi.toString(),\n        ppi: blockItem.ppi.toString(),\n        owner: blockItem.owner,\n        timestamp: blockItem.timestamp,\n      },\n    ],\n  };\n}\n\nfunction transformDate(unixTimestamp) {\n  return new Date(unixTimestamp * 1000);\n}\n\nfunction MyRow(props) {\n  const { row } = props;\n  // console.log(row);\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  const [dialogueOpen, setDialogueOpen] = React.useState(false);\n  const [quantityDialogueOpen, setQuantityDialogueOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setDialogueOpen(true);\n  };\n\n  const handleClose = () => {\n    setDialogueOpen(false);\n  };\n\n  const handleClickOpenQuantity = () => {\n    setQuantityDialogueOpen(true);\n  };\n\n  const handleCloseQuantity = () => {\n    setQuantityDialogueOpen(false);\n  };\n\n  let inputValue = React.useRef(null);\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.id}\n        </TableCell>\n        <TableCell align=\"left\">{row.section}</TableCell>\n        <TableCell align=\"left\">{row.component}</TableCell>\n        <TableCell align=\"left\">{row.item}</TableCell>\n        <TableCell align=\"right\">{row.unit}</TableCell>\n        <TableCell align=\"right\">{row.quantity}</TableCell>\n        <TableCell align=\"right\">{row.unitPrice}</TableCell>\n        <TableCell align=\"right\">\n          {row.quantity *\n            row.unitPrice *\n            (row.history[0].ppi / row.history[0].baseppi)}\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={5}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography\n                variant=\"h6\"\n                gutterBottom\n                component=\"div\"\n              ></Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Owner</TableCell>\n                    <TableCell align=\"right\">Base ppi</TableCell>\n                    <TableCell align=\"right\">Current ppi</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.history.map((historyRow) => (\n                    <TableRow key={historyRow.timestamp}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {historyRow.timestamp},\n                        <br />\n                        <Moment unix>{historyRow.timestamp}</Moment>\n                      </TableCell>\n                      <TableCell>{historyRow.owner}</TableCell>\n                      {/* <TableCell align=\"right\">{historyRow.baseppi}</TableCell>\n                      <TableCell align=\"right\">{historyRow.ppi}</TableCell> */}\n                      <TableCell align=\"right\">257.2</TableCell>\n                      <TableCell align=\"right\">257.2</TableCell>\n                      <TableCell align=\"right\">\n                        <Button>Update PPI</Button>\n                        {/* <Button>Manual PPI</Button> */}\n                        {/* <Button\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={handleClickOpenQuantity}\n                        >\n                          Set Quantity\n                        </Button> */}\n                        <Dialog\n                          open={quantityDialogueOpen}\n                          onClose={handleClickOpenQuantity}\n                          aria-labelledby=\"form-dialog-title\"\n                        >\n                          <DialogTitle id=\"form-dialog-title\">\n                            Set Quantity\n                          </DialogTitle>\n                          <DialogContent>\n                            <DialogContentText>\n                              Enter the quantity\n                            </DialogContentText>\n                            <TextField\n                              autoFocus\n                              margin=\"dense\"\n                              id=\"name\"\n                              label=\"quantity\"\n                              type=\"number\"\n                              fullWidth\n                              inputRef={(input) => (inputValue = input)}\n                            />\n                          </DialogContent>\n                          <DialogActions>\n                            <Button\n                              onClick={handleCloseQuantity}\n                              color=\"primary\"\n                            >\n                              Cancel\n                            </Button>\n                            <Button\n                              onClick={handleCloseQuantity}\n                              onClick={(event) => {\n                                {\n                                  // event.preventDefault();\n                                  console.log(inputValue.value);\n                                  // const unitPriceValue = inputValue;\n                                  props.setQuantity(row.id, inputValue.value);\n                                }\n                              }}\n                              color=\"primary\"\n                            >\n                              Update\n                            </Button>\n                          </DialogActions>\n                        </Dialog>\n                        {/* <Button\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={handleClickOpen}\n                        >\n                          Unit price\n                        </Button> */}\n                        <Dialog\n                          open={dialogueOpen}\n                          onClose={handleClose}\n                          aria-labelledby=\"form-dialog-title\"\n                        >\n                          <DialogTitle id=\"form-dialog-title\">\n                            Update unit price\n                          </DialogTitle>\n                          <DialogContent>\n                            <DialogContentText>\n                              Enter the unit price\n                            </DialogContentText>\n                            <TextField\n                              autoFocus\n                              margin=\"dense\"\n                              id=\"name\"\n                              label=\"Unit price\"\n                              type=\"number\"\n                              fullWidth\n                              inputRef={(input) => (inputValue = input)}\n                            />\n                          </DialogContent>\n                          <DialogActions>\n                            <Button onClick={handleClose} color=\"primary\">\n                              Cancel\n                            </Button>\n                            <Button\n                              onClick={handleClose}\n                              onClick={(event) => {\n                                {\n                                  // event.preventDefault();\n                                  console.log(inputValue.value);\n                                  // const unitPriceValue = inputValue;\n                                  props.setUnitPrice(row.id, inputValue.value);\n                                }\n                              }}\n                              color=\"primary\"\n                            >\n                              Update\n                            </Button>\n                          </DialogActions>\n                        </Dialog>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nclass BillTable extends Component {\n  render() {\n    return (\n      // const classes = useStyles();\n      <TableContainer component={Paper}>\n        <Table aria-label=\"collapsible table\" style={{ width: 1200 }}>\n          <TableHead>\n            <TableRow>\n              <TableCell />\n              <TableCell>ID</TableCell>\n              <TableCell align=\"left\">Section</TableCell>\n              <TableCell align=\"left\">Component</TableCell>\n              <TableCell align=\"left\">Item Description</TableCell>\n              <TableCell align=\"right\">Unit</TableCell>\n              <TableCell align=\"right\">Quantity</TableCell>\n              <TableCell align=\"right\">Unit price</TableCell>\n              <TableCell align=\"right\">Total&nbsp;($)</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.props.bills.map(\n              (row) => (\n                (row = transformData(row)),\n                (\n                  <MyRow\n                    setUnitPrice={this.props.setUnitPrice}\n                    setQuantity={this.props.setQuantity}\n                    key={row.id}\n                    row={row}\n                  />\n                )\n              )\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }\n}\n\nexport default BillTable;\n","import React, { Component } from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Moment from \"react-moment\";\n\nconst theme = createMuiTheme();\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    fontSize: 50,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nclass BillForm extends Component {\n  handleChange = (input) => (e) => {\n    this.setState({ [input]: e.target.value });\n  };\n\n  state = {\n    workSection: \"\",\n    component: \"\",\n    itemDescription: \"\",\n    unit: \"\",\n  };\n\n  render() {\n    const { workSection, component, itemDescription, unit } = this.state;\n    const values = {\n      workSection,\n      component,\n      itemDescription,\n      unit,\n    };\n    return (\n      <MuiThemeProvider theme={theme}>\n        <React.Fragment>\n          <Grid container justify=\"center\">\n            <FormControl variant=\"filled\" style={{ minWidth: 200 }}>\n              <InputLabel>Work Section</InputLabel>\n              <Select\n                value={values.workSection}\n                onChange={this.handleChange(\"workSection\")}\n              >\n                <MenuItem value={\"Preliminaries\"}>Preliminaries</MenuItem>\n                <MenuItem value={\"Excavating & filling\"}>\n                  Excavating & filling\n                </MenuItem>\n                <MenuItem value={\"In-situ concrete work\"}>\n                  In-situ concrete work\n                </MenuItem>\n                <MenuItem value={\"Composite precast concrete\"}>\n                  Composite precast concrete\n                </MenuItem>\n                <MenuItem value={\"Precast concrete\"}>Precast concrete</MenuItem>\n                <MenuItem value={\"Masonry\"}>Masonry</MenuItem>\n                <MenuItem value={\"Carpentry\"}>Carpentry</MenuItem>\n                <MenuItem value={\"Sheet roof coverings\"}>\n                  Sheet roof coverings\n                </MenuItem>\n                <MenuItem value={\"Tile and slate roof and wall coverings\"}>\n                  Tile and slate roof and wall coverings\n                </MenuItem>\n                <MenuItem value={\"General joinery\"}>General joinery</MenuItem>\n                <MenuItem value={\"Windows, screens and lights\"}>\n                  Windows, screens and lights\n                </MenuItem>\n                <MenuItem value={\"Doors, shutters and hatches\"}>\n                  Doors, shutters and hatches\n                </MenuItem>\n                <MenuItem value={\"Stairs, walkways and balustrades\"}>\n                  Stairs, walkways and balustrades\n                </MenuItem>\n                <MenuItem value={\"Floor, wall, ceiling and roof finishings\"}>\n                  Floor, wall, ceiling and roof finishings\n                </MenuItem>\n                <MenuItem value={\"Decoration\"}>Decoration</MenuItem>\n                <MenuItem value={\"Insulation, fire stopping & fire protection\"}>\n                  Insulation, fire stopping & fire protection\n                </MenuItem>\n                <MenuItem value={\"Furniture, fittings and equipment\"}>\n                  Furniture, fittings and equipment\n                </MenuItem>\n                <MenuItem value={\"Drainage above ground\"}>\n                  Drainage above ground\n                </MenuItem>\n                <MenuItem value={\"Drainage below ground\"}>\n                  Drainage below ground\n                </MenuItem>\n                <MenuItem value={\"Soft landscaping\"}>Soft landscaping</MenuItem>\n                <MenuItem value={\"Mechanical services\"}>\n                  Mechanical services\n                </MenuItem>\n                <MenuItem value={\"Electrical services\"}>\n                  Electrical services\n                </MenuItem>\n                <MenuItem\n                  value={\n                    \"Mechanical, electrical & transportation installations\"\n                  }\n                >\n                  Mechanical, electrical & transportation installations\n                </MenuItem>\n                <MenuItem value={\"Main contractor's overheads and profit\"}>\n                  Main contractor's overheads and profit\n                </MenuItem>\n              </Select>\n              <FormHelperText>Select Work Section</FormHelperText>\n            </FormControl>\n\n            <TextField\n              id=\"filled-basic\"\n              label=\"Component\"\n              variant=\"filled\"\n              helperText=\"Enter component\"\n              onChange={this.handleChange(\"component\")}\n              defaultValue={values.component}\n            />\n            <TextField\n              id=\"standard-basic\"\n              label=\"Item description\"\n              variant=\"filled\"\n              helperText=\"Enter item description\"\n              onChange={this.handleChange(\"itemDescription\")}\n              defaultValue={values.itemDescription}\n            />\n            <FormControl id=\"standard-basic\" variant=\"filled\">\n              <InputLabel id=\"demo-simple-select-helper-label\">Unit</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-helper-label\"\n                id=\"demo-simple-select-helper\"\n                value={values.unit}\n                onChange={this.handleChange(\"unit\")}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                <MenuItem value=\"m\">\n                  <em>m</em>\n                </MenuItem>\n                <MenuItem value={\"m^2\"}>\n                  m<sup>2</sup>\n                </MenuItem>\n                <MenuItem value={\"m^3\"}>\n                  m<sup>3</sup>\n                </MenuItem>\n                <MenuItem value={\"nr\"}>nr</MenuItem>\n                <MenuItem value={\"day\"}>day</MenuItem>\n                <MenuItem value={\"week\"}>week</MenuItem>\n                <MenuItem value={\"month\"}>month</MenuItem>\n              </Select>\n              <FormHelperText>Select unit</FormHelperText>\n            </FormControl>\n            <br />\n          </Grid>\n          <p></p>\n          <Grid container justify=\"center\">\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              style={{ minWidth: 150 }}\n              onClick={(event) => {\n                event.preventDefault();\n                const workSection = values.workSection;\n                const component = values.component;\n                const itemDescription = values.itemDescription;\n                const unit = values.unit;\n                const baseppi = this.props.tempppi;\n                const ppi = this.props.tempppi;\n                this.props.createBill(\n                  workSection,\n                  component,\n                  itemDescription,\n                  unit,\n                  baseppi,\n                  ppi\n                );\n                console.log(\n                  workSection,\n                  component,\n                  itemDescription,\n                  unit,\n                  baseppi,\n                  ppi,\n                  new Date()\n                );\n              }}\n            >\n              Add\n            </Button>\n          </Grid>\n        </React.Fragment>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default BillForm;\n","import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport Bills from \"../../abis/Bills.json\";\nimport \"../App.css\";\n\nimport BillTable from \"./BillTable\";\nimport BillForm from \"./BillForm\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction createData(\n  ID,\n  section,\n  component,\n  item,\n  unit,\n  quantity,\n  unitPrice,\n  total\n) {\n  return {\n    ID,\n    section,\n    component,\n    item,\n    unit,\n    quantity,\n    unitPrice,\n    total,\n  };\n}\n\nconst rows = [\n  createData(\n    \"0\",\n    \"Test Section\",\n    \"Test Component\",\n    \"Test item description\",\n    \"Test unit\",\n    \"2\",\n    \"100\",\n    \"200\"\n  ),\n];\n\nclass LogPage extends Component {\n  async componentWillMount() {\n    //wait for it to happen before doing anything else\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  // async componentDidUpdate() {\n  //   console.log(this.state.logs);\n  // }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  //RoboGame = Bills (contract name)\n  //robotCount = billCount (from smart contract)\n  //roboGame = billQuantity (contract object in js)\n  //robots = bills\n  //robot = bill\n\n  async loadBlockchainData() {\n    let logsLogs = this;\n    const web3 = window.web3;\n    //load account\n    const accounts = await web3.eth.getAccounts();\n    //console.log(accounts);\n    this.setState({ account: accounts[0] }); //first is the one connected with metamask (an array)\n    //Network ID\n    const networkId = await web3.eth.net.getId();\n    const networkData = Bills.networks[networkId];\n    if (networkData) {\n      //console.log(\"Network ID: \" + networkId);\n      const billQuantity = web3.eth.Contract(Bills.abi, networkData.address);\n      console.log(\"Contract address: \" + networkData.address); //contract address\n      this.setState({ billQuantity }); //this.setState({ billQuantity: billQuantity });\n\n      this.state.billQuantity\n        .getPastEvents(\n          \"allEvents\",\n          {\n            fromBlock: 0,\n            toBlock: \"latest\",\n          }\n          // function(error, events) {\n          //   console.log(events);\n          //   // console.log(error); //false if no errors\n          // }\n        )\n        .then(function(events) {\n          console.log(\"printing events: \");\n          console.log(events);\n          logsLogs.setState({ logs: [...logsLogs.state.logs, events] });\n          console.log(logsLogs.state.logs);\n        });\n\n      //console.log(eventLog);\n      //sort bills, show highest levelled bills first, (no lvls in bills)\n      // this.setState({\n      //   bills: this.state.bills.sort((a, b) => b.level - a.level),\n      // });\n      this.setState({ loading: false });\n    } else {\n      window.alert(\"Bill contract not deployed to the detected network.\");\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      billQuantity: null,\n      billCount: 0,\n      logs: [],\n      loading: true,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.loading ? (\n          <div>\n            <p>loading...</p>\n          </div>\n        ) : (\n          <div>Log Page</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default LogPage;\n","import React, { Component } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n});\n\nfunction createData(\n  blockNumber,\n  transactionHash,\n  eventName,\n  id,\n  section,\n  component,\n  blockTime\n) {\n  return {\n    blockNumber,\n    transactionHash,\n    eventName,\n    id,\n    section,\n    component,\n    blockTime,\n  };\n}\n\nconst rows = [\n  createData(\n    \"100\",\n    \"transactionHash\",\n    \"eventName\",\n    \"id\",\n    \"section\",\n    \"component\",\n    \"10000\"\n  ),\n];\n\nclass BillLog extends Component {\n  render() {\n    return (\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\" style={{ width: 500 }}>\n          <TableHead>\n            <TableRow>\n              <TableCell>BlockNumber</TableCell>\n              <TableCell>Transaction Hash</TableCell>\n              <TableCell>Event</TableCell>\n              <TableCell>ID</TableCell>\n              <TableCell align=\"right\">Section</TableCell>\n              <TableCell align=\"right\">Component</TableCell>\n              <TableCell align=\"right\">Time</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.props.logs.map((row, key) => (\n              <TableRow key={key}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.blockNumber}\n                </TableCell>\n                <TableCell>{row.transactionHash}</TableCell>\n                <TableCell align=\"left\">{row.event}</TableCell>\n                <TableCell align=\"left\">\n                  {row.returnValues.id.toString()}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {row.returnValues.workSection}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {row.returnValues.component}\n                </TableCell>\n                <TableCell align=\"right\">{row.timestamp}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }\n}\n\nexport default BillLog;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Web3 from \"web3\";\nimport Bills from \"../../abis/Bills.json\";\nimport BillsOracle from \"../../abis/BillsOracle.json\";\nimport \"../App.css\";\n\nimport BN from \"bn.js\";\n\nimport BillTable from \"./BillTable\";\nimport BillForm from \"./BillForm\";\nimport BillLog from \"./BillLog\";\n\nimport Button from \"@material-ui/core/Button\";\n\nvar pendingRequests = [];\nclass Bill extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    await this.loadOracle();\n    // await this.retrieveLatestppi();\n  }\n\n  async retrieveLatestppi() {\n    const resp = await axios({\n      url: \"https://api.binance.com/api/v3/ticker/price\",\n      params: {\n        symbol: \"ETHUSDT\",\n      },\n      method: \"get\",\n    });\n    //this.setState({ tempppi: resp.data.price });\n    return resp.data.price;\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    //load account\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] }); //first is the one connected with metamask (an array)\n    const networkId = await web3.eth.net.getId();\n    const networkData = Bills.networks[networkId];\n\n    if (networkData) {\n      console.log(new Date());\n      console.log(\"Network ID: \" + networkId);\n      const billQuantity = web3.eth.Contract(Bills.abi, networkData.address);\n      console.log(\"Contract address: \" + networkData.address); //contract address\n      this.setState({ billQuantity }); //this.setState({ billQuantity: billQuantity });\n      //call only reads data (no gas), send requires gas\n      const billCount = await billQuantity.methods.billCount().call();\n      this.setState({ billCount });\n\n      // const billLog = await billQuantity.getPastEvents(\"allEvents\", {\n      //   fromBlock: 0,\n      //   toBlock: \"latest\",\n      // });\n\n      const billLog = await billQuantity.getPastEvents(\"BillCreated\", {\n        fromBlock: 0,\n        toBlock: \"latest\",\n      });\n      console.log(billLog);\n\n      const billCreatedLog = await billQuantity.getPastEvents(\"BillCreated\", {\n        fromBlock: 0,\n        toBlock: \"latest\",\n      });\n\n      for (var i = 1; i <= billCount; i++) {\n        const bill = await billQuantity.methods.bills(i).call();\n\n        //match ids for timestamp\n        for (var j = 0; j <= billCreatedLog.length - 1; j++) {\n          if (\n            billCreatedLog[j].returnValues.id.toString() === bill.id.toString()\n          ) {\n            await window.web3.eth\n              .getBlock(billCreatedLog[j].blockNumber)\n              .then((result) => {\n                let timestamp = result.timestamp;\n                //console.log(timestamp);\n                bill[\"timestamp\"] = timestamp.toString();\n              });\n          }\n        }\n\n        this.setState({\n          bills: [...this.state.bills, bill], //adds bills to the end of the array, new in es6 and react\n        });\n      }\n\n      //log timestamps\n      for (var i = 0; i <= billLog.length - 1; i++) {\n        const log = billLog[i];\n\n        await window.web3.eth\n          .getBlock(billLog[i].blockNumber)\n          .then((result) => {\n            let logTimestamp = result.timestamp;\n            //console.log(logTimestamp);\n            log[\"timestamp\"] = logTimestamp.toString();\n          });\n\n        this.setState({ logs: [...this.state.logs, log] });\n      }\n\n      //all the data finished processing/loading\n      this.setState({ loading: false });\n      console.log(new Date());\n    } else {\n      window.alert(\"Bill contract not deployed to the detected network.\");\n    }\n  }\n\n  async loadOracle() {\n    //oracle handler, connected to the same blockchain\n    //BillsOracle address: 0x2ee5eFbBEcbe91DC65EAF58E5FF3864542D33a87, owner: 0x023f249EE2850b5554845eEaF34608097E9E7c10\n    const web3 = window.web3;\n    //load account\n    // const accounts = await web3.eth.getAccounts();\n    // this.setState({ account: accounts[0] }); //first is the one connected with metamask (an array)\n    const networkId = await web3.eth.net.getId();\n    const networkData = BillsOracle.networks[networkId];\n    if (networkData) {\n      //console.log(\"Network ID: \" + networkId);\n      const oracleContract = web3.eth.Contract(\n        BillsOracle.abi,\n        networkData.address\n      );\n      console.log(\"Oracle Contract address: \" + networkData.address); //contract address\n      this.setState({ oracleContract }); //this.setState({ billQuantity: billQuantity });\n      //console.log(oracleContract);\n      this.setState({ oracleAddress: networkData.address });\n\n      // const oracleAddress = await this.state.billQuantity.methods\n      //   .oracleAddress()\n      //   .call();\n      // //console.log(oracleAddress);\n      // this.setState({ oracleAddress });\n\n      // await this.state.billQuantity.methods\n      //   .updateppiPrice()\n      //   .send({ from: this.state.account });\n    } else {\n      window.alert(\"Oracle contract not deployed to the detected network.\");\n    }\n  }\n\n  //Bill.sol functions\n  setOracleInstanceAddress(address) {\n    // address = \"0x2ee5eFbBEcbe91DC65EAF58E5FF3864542D33a87\";\n    this.state.billQuantity.methods\n      .setOracleInstanceAddress(address)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        //console.log(hash);\n      })\n      .on(\"confirmation\", (confirmationNumber, receipt) => {\n        console.log(\"oracle address set confirmation.\");\n      });\n  }\n\n  updateppi() {\n    console.log(\"entered updateppi\");\n    this.state.billQuantity.methods\n      .updateppiPrice()\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        //console.log(hash);\n        this.filterOracleEvents();\n        this.filterCallerEvents();\n      })\n      .once(\"confirmation\", (confirmationNumber, receipt) => {\n        console.log(\"updateppi confirmation.\");\n        // this.filterOracleEvents();\n        // this.filterCallerEvents();\n\n        this.processQueue(this.state.account);\n        // setTimeout(async () => {\n        //   await this.processQueue(this.state.account);\n        // }, 2000);\n      });\n  }\n\n  createBill(workSection, component, itemDescription, unit, baseppi, ppi) {\n    this.setState({ loading: true });\n    this.state.billQuantity.methods\n      .createBill(workSection, component, itemDescription, unit, baseppi, ppi)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        console.log(hash);\n        this.setState({ hash });\n      })\n      .once(\"confirmation\", (confirmationNumber, receipt) => {\n        console.log(\"CreateBill confirmation complete.\");\n        console.log(new Date());\n        //console.log(confirmationNumber, receipt);\n        this.setState({ loading: false });\n      });\n  }\n\n  setUnitPrice(id, newUnitPrice) {\n    this.setState({ loading: true });\n    this.state.billQuantity.methods\n      .setUnitPrice(id, newUnitPrice)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        //console.log(hash);\n      })\n      .on(\"confirmation\", (confirmationNumber, receipt) => {\n        console.log(\"setUnitPrice confirmation complete.\");\n        //console.log(confirmationNumber, receipt);\n        this.setState({ loading: false });\n      });\n  }\n\n  setQuantity(id, newQuantity) {\n    this.setState({ loading: true });\n    this.state.billQuantity.methods\n      .setQuantity(id, newQuantity)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        //console.log(hash);\n      })\n      .on(\"confirmation\", (confirmationNumber, receipt) => {\n        console.log(\"setQuantity confirmation complete.\");\n        //console.log(confirmationNumnber, receipt);\n        this.setState({ loading: false });\n      });\n  }\n\n  filterCallerEvents() {\n    console.log(\"filterCallerEvents\");\n    this.state.billQuantity.once(\n      \"PriceUpdatedEvent\",\n      { fromBlock: \"latest\", toBlock: \"latest\", filter: {} },\n      async (err, event) => {\n        if (err) {\n          console.error(\"Error on event\", err);\n        } else {\n          console.log(\n            // \"New PriceUpdated event. ppi: \" + event.returnValue.ppiValue\n            \"New PriceUpdated event.ppi: \" +\n              event.returnValues.ppiValue / (10 ** 10 * 10)\n          );\n          const ppi =\n            event.returnValues.ppiValue.toString() / (10 ** 10 * 100000000);\n          //why does it go into here 4 times?\n          console.log(ppi);\n          this.setState({ tempppi: ppi });\n          //return event.returnValues.ppiValue.toString();\n        }\n      }\n    );\n\n    this.state.billQuantity.once(\n      \"ReceivedNewRequestIdEvent\",\n      { fromBlock: \"latest\", toBlock: \"latest\", filter: {} },\n      async (err, event) => {\n        if (err) console.error(\"Error on event\", err);\n        else console.log(\"Receieve new request ID event\");\n      }\n    );\n  }\n\n  filterOracleEvents() {\n    console.log(\"filterOracleEvents\");\n    this.state.oracleContract.once(\n      \"GetLatestppi\",\n      { fromBlock: \"latest\", filter: {} },\n      async (err, event) => {\n        if (err) {\n          console.error(\"Error on event\", err);\n          return;\n        } else {\n          //console.log(event);\n          await this.addRequestToQueue(event);\n\n          //IT IS GOING INTO HERE MULTIPLE TIMES!!!! how did I fix this? with .once\n        }\n      }\n    );\n\n    this.state.oracleContract.once(\n      \"SetLatestppi\",\n      { fromBlock: \"latest\", filter: {} },\n      async (err, event) => {\n        if (err) console.error(\"Error on event\", err);\n        //Do something\n      }\n    );\n  }\n\n  async addRequestToQueue(event) {\n    console.log(\"enterd addREquestToQueue\");\n    const callerAddress = event.returnValues.callerAddress;\n    const id = event.returnValues.id;\n    // console.log(callerAddress, id);\n    pendingRequests.push({ callerAddress, id });\n  }\n\n  async processQueue(ownerAddress) {\n    console.log(\"entered processQueue\");\n    let processedRequests = 0;\n    let CHUNK_SIZE = 1;\n    // while (pendingRequests.length > 0 && processedRequests < CHUNK_SIZE) {\n    while (pendingRequests.length > 0) {\n      console.log(\"entered the while loop!\");\n      const req = pendingRequests.shift();\n      await this.processRequest(ownerAddress, req.id, req.callerAddress);\n      processedRequests++;\n    }\n  }\n\n  async processRequest(ownerAddress, id, callerAddress) {\n    console.log(\"entered processRequest\", id, callerAddress);\n    let retries = 0;\n    let MAX_RETRIES = 1;\n    while (retries < MAX_RETRIES) {\n      try {\n        const ppiValue = await this.retrieveLatestppi();\n        await this.setLatestppi(callerAddress, ownerAddress, ppiValue, id);\n        return;\n      } catch (error) {\n        if (retries === MAX_RETRIES - 1) {\n          await this.setLatestppi(callerAddress, ownerAddress, \"0\", id);\n          return;\n        }\n        console.log(error);\n        retries++;\n      }\n    }\n  }\n\n  async setLatestppi(callerAddress, ownerAddress, ppiValue, id) {\n    console.log(\"setLatestppi function\");\n    ppiValue = ppiValue.replace(\".\", \"\");\n    const multiplier = new BN(10 ** 10, 10);\n    const ppiInt = new BN(parseInt(ppiValue), 10).mul(multiplier);\n    const idInt = new BN(parseInt(id));\n\n    console.log(ppiInt.toString(), callerAddress, idInt.toString());\n    try {\n      await this.state.oracleContract.methods\n        .setLatestppi(ppiInt.toString(), callerAddress, idInt.toString())\n        .send({ from: ownerAddress })\n        .on(\"transactionHash\", (hash) => {\n          //console.log(hash);\n        })\n        .on(\"confirmation\", (confirmationNumber, receipt) => {\n          console.log(\"setLatestppi confirmation complete.\");\n        });\n    } catch (error) {\n      console.error(\"Error encountered while calling setLatestppi\");\n      console.log(error);\n      //do some error handling\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      billQuantity: null,\n      oracleContract: null,\n      billCount: 0,\n      bills: [],\n      logs: [],\n      loading: true,\n      oracleAddress: \"\",\n      tempppi: 257,\n    };\n    this.createBill = this.createBill.bind(this);\n    this.setUnitPrice = this.setUnitPrice.bind(this);\n    this.setQuantity = this.setQuantity.bind(this);\n    this.setOracleInstanceAddress = this.setOracleInstanceAddress.bind(this);\n    this.processQueue = this.processQueue.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.loading ? (\n          <div>\n            <p>loading from the blockchain...</p>\n          </div>\n        ) : (\n          <React.Fragment>\n            <div className=\"centeredDiv\">\n              {\" \"}\n              Oracle address: {this.state.oracleAddress}\n              <br />\n              ppi test: {this.state.tempppi}\n              <Button\n                onClick={(event) => {\n                  {\n                    event.preventDefault();\n                    this.setOracleInstanceAddress(this.state.oracleAddress);\n                  }\n                }}\n              >\n                Update oracle address\n              </Button>\n              <Button\n                onClick={(event) => {\n                  {\n                    console.log(\"button to update PPI (now eth) pressed!\");\n                    event.preventDefault();\n                    this.updateppi();\n                  }\n                }}\n              >\n                Update PPI\n              </Button>\n            </div>\n\n            <BillForm\n              bills={this.state.bills}\n              createBill={this.createBill}\n              tempppi={this.state.tempppi}\n            />\n            <p></p>\n            <h2>Bill table</h2>\n            <BillTable\n              bills={this.state.bills}\n              setUnitPrice={this.setUnitPrice}\n              setQuantity={this.setQuantity}\n            />\n            <p> </p>\n            <h2>Change log</h2>\n            <BillLog logs={this.state.logs} />\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Bill;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\nconst useRowStyles = makeStyles({\n  root: {\n    \"& > *\": {\n      borderBottom: \"unset\",\n    },\n  },\n});\n\nfunction createMyData(\n  id,\n  section,\n  component,\n  item,\n  unit,\n  quantity,\n  unitPrice,\n  total,\n  baseppi,\n  ppi\n) {\n  return {\n    id,\n    section,\n    component,\n    item,\n    unit,\n    quantity,\n    unitPrice,\n    total,\n    // baseppi,\n    // ppi,\n    history: [\n      { date: \"2020-01-05\", customerId: \"11091700\", baseppi, ppi },\n      { date: \"2020-01-02\", customerId: \"Anonymous\", baseppi, ppi },\n    ],\n  };\n}\n\nconst myRows = [\n  createMyData(\n    \"1\",\n    \"Preliminaries\",\n    \"Tower Cranes\",\n    \"Crane operator\",\n    \"Weekly\",\n    \"2\",\n    \"100\",\n    \"200\",\n    \"1000\", //baseppi\n    \"5000\" //pi\n  ),\n  createMyData(\n    \"2\",\n    \"Preliminaries\",\n    \"Tower Cranes\",\n    \"Bring to site, erection, test and commission\",\n    \"num\",\n    \"2\",\n    \"1000\",\n    \"2000\",\n    \"2000\",\n    \"2100\",\n    \"other test\"\n  ),\n  createMyData(\n    \"3\",\n    \"Precast concrete\",\n    \"Beam and block floor\",\n    \"Prestressed beams at 488mm centres and 100mm block floor grouted 48 x 150mm Cube 6 concrete floor beam, Hanson Thermalite floorblock 4.0N 440 x 100 x 350mm aerated concrete block and Grout between blocks to beam and block floor, Cemex Rugby masonry cement and Tarmac premium yellow building sand\",\n    \"m^2\",\n    \"61.81\",\n    \"10\",\n    \"618.1\",\n    \"3000\",\n    \"3100\",\n    \"other test\"\n  ),\n];\n\n// function createData(name, calories, fat, carbs, protein, price) {\n//   return {\n//     name,\n//     calories,\n//     fat,\n//     carbs,\n//     protein,\n//     price,\n//     history: [\n//       { date: \"2020-01-05\", customerId: \"11091700\", amount: 3 },\n//       { date: \"2020-01-02\", customerId: \"Anonymous\", amount: 1 },\n//     ],\n//   };\n// }\n\nfunction MyRow(props) {\n  //row = myRow\n  const { row } = props;\n  console.log(row);\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.id}\n        </TableCell>\n        {/* <TableCell align=\"right\">{row.id}</TableCell> */}\n        <TableCell align=\"right\">{row.section}</TableCell>\n        <TableCell align=\"right\">{row.component}</TableCell>\n        <TableCell align=\"right\">{row.item}</TableCell>\n        <TableCell align=\"right\">{row.unit}</TableCell>\n        <TableCell align=\"right\">{row.quantity}</TableCell>\n        <TableCell align=\"right\">{row.unitPrice}</TableCell>\n        <TableCell align=\"right\">{row.total}</TableCell>\n        {/* <TableCell align=\"right\">{row.baseppi}</TableCell>\n        <TableCell align=\"right\">{row.ppi}</TableCell> */}\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                History\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Owner</TableCell>\n                    <TableCell align=\"right\">Base ppi</TableCell>\n                    <TableCell align=\"right\">Current ppi</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.history.map((historyRow) => (\n                    <TableRow key={historyRow.date}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {historyRow.date}\n                      </TableCell>\n                      <TableCell>{historyRow.customerId}</TableCell>\n                      <TableCell align=\"right\">{historyRow.baseppi}</TableCell>\n                      <TableCell align=\"right\">{historyRow.ppi}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\n// MyRow.propTypes = {\n//   row: PropTypes.shape({\n//     id: PropTypes.string.isRequired,\n//     section: PropTypes.string.isRequired,\n//     component: PropTypes.string.isRequired,\n//     item: PropTypes.string.isRequired,\n//     unit: PropTypes.string.isRequired,\n//     quantity: PropTypes.string.isRequired,\n//     unitPrice: PropTypes.string.isRequired,\n//     total: PropTypes.string.isRequired,\n//     history: PropTypes.arrayOf(\n//       PropTypes.shape({\n//         customerId: PropTypes.string.isRequired,\n//         date: PropTypes.string.isRequired,\n//         baseppi: PropTypes.string.isRequired,\n//         ppi: PropTypes.string.isRequired,\n//       })\n//     ).isRequired,\n//   }),\n// };\n\nclass CollapsibleTable extends Component {\n  render() {\n    return (\n      <TableContainer component={Paper}>\n        <Table aria-label=\"collapsible table\">\n          <TableHead>\n            <TableRow>\n              <TableCell />\n              <TableCell>id</TableCell>\n              <TableCell align=\"right\">Section</TableCell>\n              <TableCell align=\"right\">Component</TableCell>\n              <TableCell align=\"right\">item</TableCell>\n              <TableCell align=\"right\">unit</TableCell>\n              <TableCell align=\"right\">quantity</TableCell>\n              <TableCell align=\"right\">Unit price</TableCell>\n              <TableCell align=\"right\">total&nbsp;($)</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {myRows.map((row) => (\n              <MyRow key={row.id} row={row} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }\n}\n\nexport default CollapsibleTable;\n","import React, { Component } from \"react\";\nimport Identicon from \"identicon.js\";\n\nclass RoboGameMain extends Component {\n  render() {\n    return (\n      <div className=\"container-fluid mt-5\">\n        <div className=\"row\">\n          <main\n            role=\"main\"\n            className=\"col-lg-12 ml-auto mr-auto\"\n            style={{ maxWidth: \"500px\" }}\n          >\n            <div className=\"content mr-auto ml-auto\">\n              <form\n                onSubmit={(event) => {\n                  event.preventDefault();\n                  const name = this.robotName.value; //!!\n                  this.props.createRobot(name);\n                }}\n              >\n                <div className=\"form-group mr-sm-2\">\n                  <input\n                    id=\"robotName\"\n                    type=\"text\"\n                    ref={(input) => {\n                      this.robotName = input;\n                    }} //!!\n                    className=\"form-control\"\n                    placeholder=\"Enter new robot's name!\"\n                    required\n                  />\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">\n                  Create robot\n                </button>\n              </form>\n              <p>&nbsp;</p>\n              {this.props.robots.map((robot, key) => {\n                //key is index\n                return (\n                  <div className=\"card mb-4\" key={key}>\n                    <div className=\"card-header\">\n                      <img //check video for explanation for this\n                        className=\"mr-2\"\n                        width=\"30\"\n                        height=\"30\"\n                        src={`data:image/png;base64, ${new Identicon(\n                          robot.owner,\n                          30\n                        ).toString()}`}\n                      />\n                      <small className=\"text-muted\">{robot.owner}</small>\n                    </div>\n                    <ul id=\"robotList\" className=\"list-group list-group-flush\">\n                      <li className=\"list-group-item\">\n                        <div className=\"center-image\">\n                          <h3>{robot.name}</h3>\n                          <img\n                            alt=\"robots\"\n                            src={`https://robohash.org/ ${robot.name} &300x300`}\n                          />\n                        </div>\n                      </li>\n                      <li key={key} className=\"list-group-item py-2\">\n                        <small className=\"float-left mt-1 text-muted\">\n                          LEVEL:{\" \"}\n                          {window.web3.utils.fromWei(\n                            robot.level.toString(),\n                            \"Ether\"\n                          )}{\" \"}\n                        </small>\n                        <button\n                          className=\"btn btn-link btn-sm float-right pt-0\"\n                          name={robot.robotID}\n                          onClick={(event) => {\n                            //Call the tip function. Need post ID and Tip amount\n                            //event.target.name (post ID)\n                            let level = window.web3.utils.toWei(\"0.1\", \"Ether\");\n                            this.props.levelRobot(event.target.name, level);\n                          }}\n                        >\n                          LEVEL + 0.1 (ETH)\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                );\n              })}\n            </div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RoboGameMain;\n","import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport RoboGame from \"../../abis/RoboGame.json\";\n\nimport RoboGameMain from \"./RoboGameMain\";\n\nclass Robots extends Component {\n  async componentWillMount() {\n    //wait for it to happen before doing anything else\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    //load account\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n    this.setState({ account: accounts[0] }); //first is the one connected with metamask (an array)\n    //Network ID\n    const networkId = await web3.eth.net.getId();\n    const networkData = RoboGame.networks[networkId];\n    if (networkData) {\n      //console.log(networkId);\n      const roboGame = web3.eth.Contract(RoboGame.abi, networkData.address);\n      this.setState({ roboGame }); //this.setState({ roboGame: roboGame });\n      //call only reads data (no gas), send requires gas\n      const robotCount = await roboGame.methods.robotCount().call();\n      this.setState({ robotCount });\n      //console.log(robotCount);\n      //Load Robots\n      for (var i = 1; i <= robotCount; i++) {\n        const robot = await roboGame.methods.robots(i).call();\n        this.setState({\n          robots: [...this.state.robots, robot], //adds robots to the end of the array, new in es6 and react\n        });\n      }\n      console.log({ posts: this.state.robots });\n\n      //sort robots, show highest levelled robots first\n      this.setState({\n        robots: this.state.robots.sort((a, b) => b.level - a.level),\n      });\n      this.setState({ loading: false });\n    } else {\n      window.alert(\"RoboGame contract not deployed to the detected network.\");\n    }\n  }\n\n  createRobot(name) {\n    this.setState({ loading: true });\n    this.state.roboGame.methods\n      .createRobot(name)\n      .send({ from: this.state.account })\n      .once(\"receipt\", (receipt) => {\n        this.setState({ loading: false });\n      });\n  }\n\n  levelRobot(id, level) {\n    this.setState({ loading: true });\n    this.state.roboGame.methods\n      .levelRobot(id)\n      .send({ from: this.state.account, value: level })\n      .once(\"receipt\", (receipt) => {\n        this.setState({ loading: false });\n      });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      roboGame: null,\n      robotCount: 0,\n      robots: [],\n      loading: true,\n    };\n\n    this.createRobot = this.createRobot.bind(this);\n    this.levelRobot = this.levelRobot.bind(this);\n  }\n\n  render() {\n    return (\n      <div className=\"d-flex justify-content-center\">\n        <RoboGameMain\n          robots={this.state.robots}\n          createRobot={this.createRobot}\n          levelRobot={this.levelRobot}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Robots;\n","import React, { Component } from \"react\";\nimport localJson from \"./getTest.json\";\nimport axios from \"axios\";\n\nconst apiKey = \"8654f96ed3dc4c07a01235a71ae17527\";\n\nasync function retrieveLatestEthPrice() {\n  const resp = await axios({\n    url: \"https://api.binance.com/api/v3/ticker/price\",\n    params: {\n      symbol: \"ETHUSDT\",\n    },\n    method: \"get\",\n  });\n  return resp.data.price;\n}\n\nexport class getTest extends Component {\n  state = {\n    loading: true,\n    product: null,\n    ethData: [],\n    localJson,\n  };\n\n  //   async componentDidMount() {\n  //     // const url =\n  //     //   \"https://api.bls.gov/publicAPI/v2/timeseries/data/WPU13?latest=true/\" +\n  //     //   apiKey;\n  //     const url = localJson;\n  //     const response = await fetch(url);\n  //     const data = await response.json();\n  //     this.setState({ product: data, loading: false });\n  //     console.log(data);\n  //   }\n\n  async componentDidMount() {\n    const resp = await axios({\n      url: \"https://api.binance.com/api/v3/ticker/price\",\n      params: {\n        symbol: \"ETHUSDT\",\n      },\n      method: \"get\",\n    });\n    this.setState({\n      ethData: [...this.state.ethData, resp.data.price],\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {/* {this.state.loading || !this.state.person ? (\n          <div>Loading ... </div>\n        ) : (\n          <div>\n            <div> {this.state.product.status} </div>\n          </div>\n        )} */}\n        <div>\n          <div>\n            {localJson.Results.series[0].data[0].year}{\" \"}\n            {console.log(localJson.Results.series[0].data[0])}\n          </div>\n          <div>Latest ETH price: {this.state.ethData}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default getTest;\n","import React, { Component } from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst theme = createMuiTheme();\n\nclass FormUserDetails extends Component {\n  continue = (e) => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  render() {\n    const { values, handleChange } = this.props; //pulling it out so we can use values as a variable\n    return (\n      <MuiThemeProvider theme={theme}>\n        <p>&nbsp;</p>\n        <p>&nbsp;</p>\n        <React.Fragment>\n          <AppBar position=\"fixed\" style={{ top: 60, bottom: \"auto\" }}>\n            <p>Enter user details</p>\n          </AppBar>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"First Name\"\n            variant=\"outlined\"\n            helperText=\"Enter your first name\"\n            onChange={handleChange(\"firstName\")}\n            defaultValue={values.firstName}\n          />\n          <br />\n          <p>&nbsp;</p>\n          <TextField\n            id=\"filled-basic\"\n            label=\"Last Name\"\n            variant=\"filled\"\n            helperText=\"Enter your second name\"\n            onChange={handleChange(\"lastName\")}\n            defaultValue={values.lastName}\n          />\n          <br />\n          <p>&nbsp;</p>\n          <TextField\n            id=\"standard-basic\"\n            label=\"Email\"\n            variant=\"filled\"\n            helperText=\"Enter your email\"\n            onChange={handleChange(\"email\")}\n            defaultValue={values.email}\n          />\n          <br />\n          <p>&nbsp;</p>\n          <div style={{ justifyContent: \"center\" }}>\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.continue}>\n              Continue\n            </Button>\n          </div>\n        </React.Fragment>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default FormUserDetails;\n","import React, { Component } from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst theme = createMuiTheme();\n\nclass FormPersonalDetails extends Component {\n  continue = (e) => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = (e) => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { values, handleChange } = this.props; //pulling it out so we can use values as a variable\n    return (\n      <MuiThemeProvider theme={theme}>\n        <p>&nbsp;</p>\n        <p>&nbsp;</p>\n        <React.Fragment>\n          <AppBar position=\"fixed\" style={{ top: 60, bottom: \"auto\" }}>\n            <p>Enter personal details</p>\n          </AppBar>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Occupation\"\n            variant=\"outlined\"\n            helperText=\"Enter your Occupation\"\n            onChange={handleChange(\"occupation\")}\n            defaultValue={values.occupation}\n          />\n          <br />\n          <p>&nbsp;</p>\n          <TextField\n            id=\"filled-basic\"\n            label=\"City\"\n            variant=\"filled\"\n            helperText=\"Enter your city\"\n            onChange={handleChange(\"city\")}\n            defaultValue={values.city}\n          />\n          <br />\n          <p>&nbsp;</p>\n          <TextField\n            id=\"standard-basic\"\n            label=\"Bio\"\n            variant=\"filled\"\n            helperText=\"Enter your bio\"\n            onChange={handleChange(\"bio\")}\n            defaultValue={values.bio}\n          />\n          <br />\n          <p>&nbsp;</p>\n          <div style={{ justifyContent: \"center\" }}>\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.continue}>\n              Continue\n            </Button>\n            <Button variant=\"outlined\" onClick={this.back}>\n              back\n            </Button>\n          </div>\n        </React.Fragment>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default FormPersonalDetails;\n","import React, { Component } from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst theme = createMuiTheme();\n\nclass FormUserDetails extends Component {\n  continue = (e) => {\n    e.preventDefault();\n\n    //PROCESS FORM to backend\n    this.props.nextStep();\n  };\n\n  back = (e) => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const {\n      values: { firstName, lastName, email, occupation, city, bio },\n    } = this.props; //pulling it out so we can use values as a variable\n    return (\n      <MuiThemeProvider theme={theme}>\n        <p>&nbsp;</p>\n        <p>&nbsp;</p>\n        <React.Fragment>\n          <AppBar position=\"fixed\" style={{ top: 60, bottom: \"auto\" }}>\n            <p>Confirm user data</p>\n          </AppBar>\n          <List>\n            <ListItem>\n              <ListItemText primary=\"First Name\" secondary={firstName} />\n            </ListItem>\n            <ListItem>\n              <ListItemText primary=\"Last Name\" secondary={lastName} />\n            </ListItem>\n            <ListItem>\n              <ListItemText primary=\"Email\" secondary={email} />\n            </ListItem>\n            <ListItem>\n              <ListItemText primary=\"Occupation\" secondary={occupation} />\n            </ListItem>\n            <ListItem>\n              <ListItemText primary=\"City\" secondary={city} />\n            </ListItem>\n            <ListItem>\n              <ListItemText primary=\"Bio\" secondary={bio} />\n            </ListItem>\n            {/* <ListItem primaryText=\"First Name\" secondaryText={firstName} />\n            <ListItem primaryText=\"Last Name\" secondaryText={lastName} />\n            <ListItem primaryText=\"Email\" secondaryText={email} />\n            <ListItem primaryText=\"Occupation\" secondaryText={occupation} />\n            <ListItem primaryText=\"City\" secondaryText={city} />\n            <ListItem primaryText=\"Bio\" secondaryText={bio} /> */}\n          </List>\n          <br />\n          <p>&nbsp;</p>\n          <div style={{ justifyContent: \"center\" }}>\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.continue}>\n              Confirm and continue\n            </Button>\n            <Button variant=\"outlined\" onClick={this.back}>\n              back\n            </Button>\n          </div>\n        </React.Fragment>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default FormUserDetails;\n","import React, { Component } from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\n\nconst theme = createMuiTheme();\n\nclass Success extends Component {\n  continue = (e) => {\n    e.preventDefault();\n\n    //PROCESS FORM to backend\n    this.props.nextStep();\n  };\n\n  back = (e) => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <p>&nbsp;</p>\n        <p>&nbsp;</p>\n        <React.Fragment>\n          <AppBar position=\"fixed\" style={{ top: 60, bottom: \"auto\" }}>\n            <p>Success</p>\n          </AppBar>\n          <h1>Thank you for your submission</h1>\n          <p>This is done!</p>\n          <br />\n          <p>&nbsp;</p>\n          <div style={{ justifyContent: \"center\" }}>\n            <Button variant=\"outlined\" href=\"/userform\">\n              Restart\n            </Button>\n          </div>\n        </React.Fragment>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default Success;\n","import React, { Component } from \"react\";\nimport FormUserDetails from \"./FormUserDetails\";\nimport FormPersonalDetails from \"./FormPersonalDetails\";\nimport Confirm from \"./Confirm\";\nimport Success from \"./Success\";\n\nclass UserForm extends Component {\n  state = {\n    step: 1,\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    occupation: \"\",\n    city: \"\",\n    bio: \"\",\n  };\n\n  //Proceed to next step\n  nextStep = () => {\n    const { step } = this.state; //called destructuring\n    this.setState({\n      step: step + 1,\n    });\n  };\n\n  //Go back to previous step\n  prevStep = () => {\n    const { step } = this.state; //called destructuring\n    this.setState({\n      step: step - 1,\n    });\n  };\n\n  //Handle fields change\n  handleChange = (input) => (e) => {\n    //event\n    this.setState({ [input]: e.target.value });\n  };\n\n  render() {\n    const { step } = this.state;\n    const { firstName, lastName, email, occupation, city, bio } = this.state; //pull out of the state\n    const values = { firstName, lastName, email, occupation, city, bio };\n    switch (step) {\n      case 1:\n        return (\n          <FormUserDetails\n            nextStep={this.nextStep}\n            handleChange={this.handleChange}\n            values={values}\n          />\n        );\n\n      case 2:\n        return (\n          <FormPersonalDetails\n            nextStep={this.nextStep}\n            prevStep={this.prevStep}\n            handleChange={this.handleChange}\n            values={values}\n          />\n        );\n      case 3:\n        return (\n          <Confirm\n            nextStep={this.nextStep}\n            prevStep={this.prevStep}\n            values={values}\n          />\n        );\n      case 4:\n        return <Success />;\n    }\n  }\n}\n\nexport default UserForm;\n","import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport Navbar from \"./Navbar\";\nimport LogPage from \"./bills/LogPage\";\nimport Bill from \"./bills/Bill\";\nimport TableTest from \"./others/TableTest\";\nimport Robots from \"./robogame/Robots\";\nimport GetTest from \"./rest/getTest\";\n\nimport UserForm from \"./forms/UserForm\";\n\nclass App extends Component {\n  async componentWillMount() {\n    //wait for it to happen before doing anything else\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask to try all the features!\"\n      );\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    //load account\n    const accounts = await web3.eth.getAccounts();\n    console.log(\"Account address: \" + accounts);\n    this.setState({ account: accounts[0] }); //first is the one connected with metamask (an array)\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"d-flex justify-content-center\">\n        <Router>\n          <Navbar account={this.state.account} />\n          <div className=\"nav-padding\">\n            <Switch>\n              <Route path=\"/userform\" component={UserForm} />\n              <Route path=\"/TableTest\" component={TableTest} />\n              <Route exact path=\"/log\" component={LogPage} />\n              <Route path=\"/bill\" component={Bill} />\n              <Route path=\"/gettest\" component={GetTest} />\n              <Route path=\"/robots\" component={Robots} />\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}